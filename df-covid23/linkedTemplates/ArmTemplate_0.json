{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-covid23"
		},
		"ls_adl_covid23_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adl_covid23'"
		},
		"ls_blob_covid_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blob_covid'"
		},
		"ls_log_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_log'"
		},
		"ls_adl_covid23_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlcovid23.dfs.core.windows.net/"
		},
		"ls_http_ecdc_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().sourceBaseURL}"
		},
		"tr_ingest_population_Event_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/365f49c6-7b94-4aa1-998d-c0207f37c6f5/resourceGroups/rs-covid-project/providers/Microsoft.Storage/storageAccounts/sacovid23"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_adl_covid23')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adl_covid23_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adl_covid23_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blob_covid')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blob_covid_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_http_ecdc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"sourceBaseURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_http_ecdc_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_log')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_log_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_cases_and_deaths')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_covid23",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cases_deaths.csv",
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "rate_14_day",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "LoadId",
						"type": "String"
					},
					{
						"name": "AdlLoadTime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adl_covid23')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Lookup_Countries')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_covid23",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "country_lookup.csv",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adl_covid23')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adl_ecdc_raw_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_covid23",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"source_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().source_file_name",
							"type": "Expression"
						},
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adl_covid23')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_covid_pop_raw_gz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DS for covid project. \nGetting info from blob to adl_raw for population data",
				"linkedServiceName": {
					"referenceName": "ls_blob_covid",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "population_by_age.tsv.gz",
						"container": "population"
					},
					"columnDelimiter": "\t",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_covid')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_covid_pop_raw_tsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_covid23",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adl_covid23')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ecdc_raw_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_http_ecdc",
					"type": "LinkedServiceReference",
					"parameters": {
						"sourceBaseURL": {
							"value": "@dataset().base_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"relative_url": {
						"type": "string"
					},
					"base_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relative_url",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_http_ecdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ecdc_url_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_covid",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ecdc_url_list.json",
						"container": "ecdc"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"sourceRelativeURL": {
							"type": "string"
						},
						"sinkFileName": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_covid')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adl_covid23",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "processed"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adl_covid23')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_ecdc_git_adl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute copy for every record",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Url",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Url').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy ECDC data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "LoadId",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												{
													"name": "AdlLoadTime",
													"value": {
														"value": "@convertFromUtc(pipeline().TriggerTime,'Pacific Standard Time')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "HttpReadSettings",
												"maxConcurrentConnections": 1,
												"requestMethod": "GET",
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_ecdc_raw_csv",
											"type": "DatasetReference",
											"parameters": {
												"relative_url": {
													"value": "@item().sourceRelativeURL",
													"type": "Expression"
												},
												"base_url": {
													"value": "@item().sourceBaseURL",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adl_ecdc_raw_csv",
											"type": "DatasetReference",
											"parameters": {
												"source_file_name": {
													"value": "@item().sinkFileName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup Url",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:02:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_ecdc_url_blob",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ecdc_url_blob')]",
				"[concat(variables('factoryId'), '/datasets/ds_ecdc_raw_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_ecdc_raw_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_pop_blob_adl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Column Counts matches",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get file Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get file Metadata').output.columnCount,13)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send Email File change",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://github.com/nimachinikar/portofolio",
										"method": "POST",
										"headers": {},
										"body": "hello"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy population Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.0:05:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "LoadADLTime",
													"value": {
														"value": "@convertFromUtc(pipeline().TriggerTime,'Pacific Standard Time')",
														"type": "Expression"
													}
												},
												{
													"name": "LoadId",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"maxConcurrentConnections": 1,
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"maxConcurrentConnections": 1
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_covid_pop_raw_gz",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_covid_pop_raw_tsv",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Delete Source File",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "Copy population Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:00:10",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_covid_pop_raw_gz",
											"type": "DatasetReference",
											"parameters": {}
										},
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "ls_log",
												"type": "LinkedServiceReference"
											}
										},
										"enableLogging": true,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					},
					{
						"name": "Get file Metadata",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Validation file Exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_covid_pop_raw_gz",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists",
								"columnCount"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Validation file Exists",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_covid_pop_raw_gz",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:00:10",
							"sleep": 10,
							"minimumSize": 1024
						}
					},
					{
						"name": "Send Email No file",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Validation file Exists",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://github.com/nimachinikar/portofolio",
							"method": "POST",
							"headers": {},
							"body": "hello"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_covid_pop_raw_gz')]",
				"[concat(variables('factoryId'), '/datasets/ds_covid_pop_raw_tsv')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/transform_cases_death')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_raw_cases_and_deaths",
								"type": "DatasetReference"
							},
							"name": "CasesAndDeathsSource"
						},
						{
							"dataset": {
								"referenceName": "ds_Lookup_Countries",
								"type": "DatasetReference"
							},
							"name": "CountriesLookup"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_cases_deaths",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "ls_adl_covid23",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "FilterToEurope"
						},
						{
							"name": "LookUpCountries"
						},
						{
							"name": "SelectColumns",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "PivotCounts"
						},
						{
							"name": "AddingCasesColumns"
						},
						{
							"name": "OrdergingColumns"
						},
						{
							"name": "AddingProcessTime"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          country_code as string,",
						"          continent as string,",
						"          population as integer,",
						"          indicator as string,",
						"          daily_count as integer,",
						"          date as date,",
						"          rate_14_day as double,",
						"          source as string,",
						"          LoadId as string,",
						"          AdlLoadTime as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CasesAndDeathsSource",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> CountriesLookup",
						"CasesAndDeathsSource filter(continent=='Europe' && not(isNull(country_code))) ~> FilterToEurope",
						"FilterToEurope, CountriesLookup lookup(CasesAndDeathsSource@country == CountriesLookup@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> LookUpCountries",
						"LookUpCountries select(mapColumn(",
						"          country = CasesAndDeathsSource@country,",
						"          country_code_2_digit,",
						"          country_code_3_digit = country_code,",
						"          continent = CasesAndDeathsSource@continent,",
						"          population = CasesAndDeathsSource@population,",
						"          indicator,",
						"          daily_count,",
						"          source,",
						"          LoadId,",
						"          AdlLoadTime,",
						"          each(match(name=='date'),",
						"               'reported'+'_date' = $$)",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectColumns",
						"SelectColumns pivot(groupBy(country,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          continent,",
						"          population,",
						"          reported_date,",
						"          LoadId,",
						"          AdlLoadTime),",
						"     pivotBy(indicator, ['confirmed', 'deaths']),",
						"     count = sum(daily_count),",
						"     columnNaming: '$V_$N',",
						"     lateral: true) ~> PivotCounts",
						"PivotCounts select(mapColumn(",
						"          each(match(true()),",
						"               'cases_'+$$ = $$)",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> AddingCasesColumns",
						"AddingCasesColumns select(mapColumn(",
						"          cases_country,",
						"          cases_country_code_2_digit,",
						"          cases_country_code_3_digit,",
						"          cases_continent,",
						"          cases_population,",
						"          cases_reported_date,",
						"          cases_confirmed_count,",
						"          cases_deaths_count,",
						"          AdlLoadTime = cases_AdlLoadTime,",
						"          LoadId = cases_LoadId",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OrdergingColumns",
						"OrdergingColumns derive(ProcessTime = fromUTC(currentTimestamp(),'Pacific Standard Time')) ~> AddingProcessTime",
						"AddingProcessTime sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_raw_cases_and_deaths')]",
				"[concat(variables('factoryId'), '/datasets/ds_Lookup_Countries')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_cases_deaths')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_adl_covid23')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_ingest_ecdc')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_ingest_ecdc_git_adl",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2023-02-15T22:36:00Z",
						"endTime": "2023-02-16T22:37:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_ecdc_git_adl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_ingest_population_Event')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_ingest_pop_blob_adl",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/population/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_ingest_population_Event_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_pop_blob_adl')]"
			]
		}
	]
}